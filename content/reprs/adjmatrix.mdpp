Title: Adjacency Matrix
Category: Representing Graphs
Date: 2016-06-26
Position: 2
Summary: Graphs can be represented by a matrix
Disqus_identifier: 2c59cbd3-graphs-can-be-represented-by-a-matrix

!INCLUDE "static/context_header.md"

Adjacency matrices provide another way to represent a graph, using a square
array of numbers. They are slightly more complicated than adjacency lists,
but it pays off to study them, since we can use all the power of matrix
algebra to manipulate them.

Consider the graph in the picture and assume we were trying to write down
all of the edges in the graph.

!INCLUDE "static/img_desc.html" {src: "/images/adjmatrix.png", title: "Example graph.", desc: Example graph.}

If all we had was this drawing (instead of, say, an adjacency list
representation of the network), we would need to examine node by node and
write down each of the node's neighbors. Thus, we start at the node labeled
`0` and look at every node in order, while asking ourselves these
questions: 'Is `0` connected to `0`?' 'Is `0` connected to `1`?' 'Is `0`
connected to `2`?', and so on and so forth, while we write down our answers
as follows.

```
NO YES YES YES
```

We repeat the same process for every other node, asking if `1` is connected
to each node in turn, if `2` is connected to each node in turn, and so on,
to get the following set of answers,

```
NO  YES YES YES
YES NO  NO  YES
YES NO  NO  NO
YES YES NO  NO
```

Hint:
: When you consider a node `u` and go through every node, remember to ask
if a node is connected to itself (allow for self-loops), and to cover the
nodes always in the same order.

Now, this 'array of answers' holds a lot of information about the graph. In
fact, it holds *all* the information about edges that we care about, just
as well as the adjacency list representation. However, it is not very easy
to compute anything with a bunch of words sorted in a nice way. For real
computational power, we need a matrix.

To write down our adjacency matrix, all we need to do is convert our array
of answers into an array of numbers, by replacing every occurrence of `YES`
to `1`, and every `NO` to `0`.

```
NO  YES YES YES       0 1 1 1
YES NO  NO  YES  -->  1 0 0 1
YES NO  NO  NO		  1 0 0 0
YES YES NO  NO		  1 1 0 0
```

The array of numbers we have constructed is called the adjacency matrix of
the graph.

Adjacency Matrix[](#adjacency-matrix)
: The **adjacency matrix** of a graph with `n` nodes is an `nxn` matrix
whose element at the `i`-th row and `j`-th column indicates whether nodes
`i` and `j` are adjacent or not.

In the usual mathematical typsetting, the adjacency matrix of this example
would look as follows.

$\displaystyle \begin{pmatrix} 0  &1  &1  &1 \\ 1  &0  &0  &1 \\ 1  &0  &0  &0 \\ 1  &1  &0  &0 \end{pmatrix} $


!INCLUDE "static/problem_header.md"

To solve this problem, you will need to read a file in adjacency list form,
and output its adjacency matrix.

The input will be a file where the first line contains just one integer,
`n`, the number of nodes in the graph. Each of the following `n` lines
holds a list of space-separated integers, representing the adjacencies of
every node. As before, assume that nodes are labeled from `0` to `n-1`. The
lines are in ascending order of node label, e.g., the first line of the
output contains the adjacencies of node `0`, the second line contains the
adjacencies of node `1`, etc.

Output the adjacency matrix of the graph.

!INCLUDE "static/input_header.md"

```
4
1 2 3
0 3
0
0 1
```

!INCLUDE "static/output_header.md"

```
0 1 1 1
1 0 0 1
1 0 0 0
1 1 0 0
```

!INCLUDE "static/question_header.md"

1. Consider the adjacency matrix of an undirected graph.
    1. What can you say about the entry at row `i`, column `j`, as compared
       to the entry at row `j`, column `i`?
    2. What if the graph is undirected?
    3. How might your answer to 1.1 affect the solution to the above
       problem, assuming that the graph is undirected?
2. For a given node `u` in the example network, compute the degree of `u`
   using only the adjacency matrix.
3. Compute the density of the example network using only its adjacency
   matrix.
4. Can you construct the adjacency matrix of multigraph? Why or why not?

--------------------------------------------------------

!INCLUDE "static/solutions_header.md"

[Solution](https://github.com/Leockard/erdos/blob/master/solutions/reprs/adjmatrix.py).
